// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+a z",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+a j",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "ctrl+a k",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+a t",
    "command": "workbench.view.extension.test"
  },
  {
    "key": "ctrl+a shift+t",
    "command": "test-explorer.run-all"
  },
  {
    "key": "ctrl+a l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+k ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+a h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+k ctrl+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+a k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+k ctrl+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+a j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+k ctrl+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+a e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+a space",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+a i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+a =",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+a s",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+a u",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+a ]",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+a q",
    "command": "workbench.action.closePanel"
  },
  {
    "key": "ctrl+a =",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "-workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus"
  },
  {
    "key": "shift+pageup",
    "command": "-workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+t",
    "command": "test-explorer.run-this-test"
  },
  {
    "key": "ctrl+a backspace",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+a [",
    "command": "editor.fold",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+a ctrl+[",
    "command": "editor.foldAll",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+a p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+a p",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+a d",
    "command": "workbench.view.debug"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug"
  },
  {
    "key": "ctrl+a z",
    "command": "extension.dash.specific",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-extension.dash.specific",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+a m",
    "command": "workbench.action.maximizeEditor"
  },
  {
    "key": "ctrl+a n",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+a \\",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+a f",
    "command": "workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "ctrl+a shift+;",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "ctrl+a ;",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+a alt+b",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "ctrl+a shift+alt+b",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "ctrl+a shift+b",
    "command": "editor.action.marker.prev",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+a b",
    "command": "editor.action.marker.next",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+a shift+'",
    "command": "editor.action.fixAll"
  },
  {
    "key": "ctrl+a shift+z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+a shift+f",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeEditorInAllGroups"
  },
  {
    "key": "ctrl+q",
    "command": "-extension.vim_winCtrlQ",
    "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
  },
  {
    "key": "shift+alt+v",
    "command": "toggleVim"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+[",
    "command": "-markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+[",
    "command": "-extension.vim_ctrl+[",
    "when": "editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+a space",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+a ,",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "ctrl+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+,",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "shift+cmd+/",
    "command": "toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "cmd+/",
    "command": "-toggleExplainMode",
    "when": "suggestWidgetVisible"
  }
]
