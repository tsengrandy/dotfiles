#!/bin/sh
set -e

# Local directory variables
BIN=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
ROOT=$BIN/..

echo "Installing..."

# Only run if the tools are not installed yet
# To check that try to print the SDK path
echo "Checking Command Line Tools for Xcode"
xcode-select -p &> /dev/null
if [ $? -ne 0 ]; then
  echo "Command Line Tools for Xcode not found. Installing from softwareupdateâ€¦"
  # This temporary file prompts the 'softwareupdate' utility to list the Command Line Tools
  touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
  PROD=$(softwareupdate -l | grep "\*.*Command Line" | tail -n 1 | sed 's/^[^C]* //')
  softwareupdate -i "$PROD" --verbose;
else
  echo "Command Line Tools for Xcode have been installed."
fi

# Check for Homebrew and install if we don't have it
if test ! $(which brew); then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.zprofile
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Update Homebrew
brew update

# Brew install
chmod a+x $ROOT/brew
source $ROOT/brew

# ASDF Dir Env
asdf plugin-add direnv
asdf direnv setup --shell zsh --version latest

# Get cURL certs in the right place
mkdir -p $HOME/.certs
wget -O $HOME/.certs/cacert.pem https://curl.se/ca/cacert.pem

# Link configs
chmod a+x $BIN/link
source $BIN/link

# Clone Repositories
chmod a+x $BIN/clone
$BIN/clone

# Set macOS preferences
source ~/.macos

# Setup Cron
crontab -l | { cat; echo "0 */1 * * * /Users/$USER/.local/bin/notes_sync"; } | crontab -
